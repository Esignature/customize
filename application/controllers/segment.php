<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Segment extends CI_Controller {	function __construct()	{		parent::__construct();        $this->site_id = $this->session->userdata(APPID. '_site_id');			}    function index()    {        $data = array();        $this->load->view('site/segment_list', $data);    }	function add()	{	    $this->load->helper('segmentation');        $this->load->language('segmentation_rules', CURRENT_LANGUAGE);        		$data = array();        $data['seg_id'] = 0;        $data['main_cats'] = main_rule_categories();		$this->load->view('site/add_edit_segment', $data);	}             function edit()    {        $this->load->helper('segmentation');        $this->load->language('segmentation_rules', CURRENT_LANGUAGE);        $this->load->model('segment_model', 'segmo');                $seg_id = $this->uri->segment(4);        $seg_data = $this->segmo->find_by_id($seg_id, $this->site_id);                        /*        $this->dbug->show($seg_data);        //die();        #*/                $data = array();        $data['seg_id'] = $seg_id;        $data['main_cats'] = $rule_cats = main_rule_categories();                $data['seg_name'] = $seg_data['seg_name'];        $data['seg_desc'] = $seg_data['seg_desc'];        $data['hdn_seg_cats'] = $seg_data['check_node'];        $_group = $seg_data['_group'];        $data['js_script'] = "\$j(function(){\r\n";                foreach($_group as $grp_id=>$grp_data){            $arrAlias   = $grp_data['event_alias'];            $grp_so     = $grp_data['evt_grp_blk_so'];                        $data['js_script'] .= "\$j('#add_event_block').trigger('click', [{$grp_id}, {$grp_so}])\r\n";                                    foreach($grp_data['fieldset'] as $k=>$dt){                $evt_so = $k;                $not_op = isset($dt['not_op']) && !empty($dt['not_op']) ? $dt['not_op'] : 0;                $pre_op = $dt['pre_op'];                $alias = $arrAlias[$k-1];                                foreach($dt['fields'] as $fld_id=>$flds){                    $data['js_script'] .= "add_rule('{$fld_id}', null, '{$grp_id}', '{$evt_so}', '{$not_op}', '{$pre_op}', encodeTxt('{$alias}', 1), ".json_encode($grp_data['fieldset']).", true)\r\n";                }               }                                   }                $data['js_script'] .= "})";        $this->load->view('site/add_edit_segment', $data);    }           // segmentation list actions    function segment_list_actions(){        $this->load->model('segment_model', 'segmo');        $axn = $this->input->post('axn', true);        $ids = $this->input->post('seg_id_chk', true);        if($axn){            switch($axn){                case 'delete':                    if($this->segmo->delete(join(', ', $ids), $this->site_id))                        echo json_encode(array('success'=>1));                    else                        echo json_encode(array('success'=>0));                    break;                case 'activation':                    $this->segmo->activate(join(', ', $ids), $this->site_id);                    echo json_encode(array('success'=>1, 'ids'=>join(',', $ids)));                    break;                case 'deactivation':                    $this->segmo->deactivate(join(', ', $ids), $this->site_id);                    echo json_encode(array('success'=>1, 'ids'=>join(',', $ids)));                    break;                                }        }    }        function segment_datalist(){               $this->load->model('segment_model', 'segmo');                   $aColumns = array('seg_id', 'seg_name', 'seg_desc', 'status');        $bColumns = array('seg_name');                       $dtbl_data = $this->segmo->get_list_data($this->site_id, $_GET, $aColumns, $bColumns);                        // Output         $output = array(            "sEcho" => intval($_GET['sEcho']),            "iTotalRecords" => $dtbl_data['iTotal'],            "iTotalDisplayRecords" => $dtbl_data['iFilteredTotal'],            "aaData" => array()        );                $result = $dtbl_data['data'];                foreach ( $result as $aRow )        {            $row = array();                        $row['DT_RowId'] = 'row_'.$aRow->seg_id;            $row[] = '<input type="checkbox" name="seg_id_chk[]" class="chkbox"  id="seg_id_'.$aRow->seg_id.'" value="'.$aRow->seg_id.'" />';                        for ( $i=0 ; $i<count($aColumns) ; $i++ ){                if ( in_array($aColumns[$i], $bColumns) && $aColumns[$i] != ' ' ){                                                                                if($aColumns[$i] == 'seg_name'){                        $row[] = edit_anchor($aRow->$aColumns[$i], fsite_url('segment/edit/'.$aRow->$aColumns[0]));                    }else{                                            $row[] = $aRow->$aColumns[$i];                    }                }            }                        $row[] = '2';            $row[] = 'manage';            $row[] = 'Constant';            $row[] = '9';            $row[] = '6(78%)';            $row[] = '0%(Â±0%)';            $row[] = '83.3%(+8.3%)';            $row[] = '1.5(Â±0)';            $row[] = '1 min 15 sec';            $row[] = copy_anchor( $aRow->seg_id ) .                     info_anchor( $aRow->seg_id ) .                     graph_anchor( $aRow->seg_id ) .                     status_anchor( $aRow->status, $aRow->seg_id ) .                     delete_anchor( $aRow->seg_name, 'seg_del.'.$aRow->seg_id, 'seg_del' );            $output['aaData'][] = $row;                }                echo json_encode( $output );            }}